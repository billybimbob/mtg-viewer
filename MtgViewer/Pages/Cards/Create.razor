@page "/Cards/Create"
@using System.Linq.Expressions
@using MtgViewer.Services.Search
@inject SymbolFormatter MtgSymbols

<PageTitle> Add Cards </PageTitle>

<h1>Add Card(s)</h1>

<SavePrompt @bind-Result="Result">
    <SuccessMessage>
        New cards were successfully added.
    </SuccessMessage>
    <ErrorMessage>
        @if (IsSearchError)
        {
            <text>No Matches were found.</text>
        }
        else
        {
            <text>Ran into issues while try to add the new cards.</text>
        }
    </ErrorMessage>
</SavePrompt>

@if (!Matches.Any() && IsFromForm)
{
    <hr />
    <div class="row">
        <section class="col-md order-md-last">
            <h5> Parameter Descriptions </h5>
            <p> Search by different attributes of an MTG card: </p>

            <dl class="row mb-0">
                <dt class="col-12 col-lg-2"> @HtmlHelpers.GetDisplay((CardSearch c) => c.Name) </dt>
                <dd class="col-12 col-lg-10">
                    <p>
                        The Name of the card (in the top left). Multiple faced cards can either specify
                        one specific face, or mutiple faces deliminated by "//".
                    </p>
                </dd>

                <dt class="col-12 col-lg-2"> @HtmlHelpers.GetDisplay((CardSearch c) => c.ManaValue) </dt>
                <dd class="col-12 col-lg-10">
                    <p>
                        The total amount of mana specified a card's casting cost (located on the top right).
                    </p>
                </dd>

                <dt class="col-12 col-lg-2"> @HtmlHelpers.GetDisplay((CardSearch c) => c.Colors) </dt>
                <dd class="col-12 col-lg-10">
                    <p>
                        The color identity of the card. Color identity is affected by
                        a card's mana cost, but also mana abilities costs and text
                        effects.
                    </p>
                </dd>

                <dt class="col-12 col-lg-2"> @HtmlHelpers.GetDisplay((CardSearch c) => c.SetName) </dt>
                <dd class="col-12 col-lg-10">
                    <p>
                        The set at which a specific card print was apart of. The set
                        can only be specified by the set <i>name</i>, not the set code.
                    </p>
                </dd>

                <dt class="col-12 col-lg-2"> @HtmlHelpers.GetDisplay((CardSearch c) => c.Types) </dt>
                <dd class="col-12 col-lg-10">
                    <p> Type information specified in the middle of the card </p>
                    <p> Examples: Basic Land, Planeswalker, Creature Enchantment </p>
                </dd>

                <dt class="col-12 col-lg-2"> @HtmlHelpers.GetDisplay((CardSearch c) => c.Text) </dt>
                <dd class="col-12 col-lg-10">
                    <p>
                        The card effect text. The Oracle Text can also be searched by
                        keywords and phrases.
                    </p>
                </dd>

                <dt class="col-12 col-lg-2"> @HtmlHelpers.GetDisplay((CardSearch c) => c.Flavor) </dt>
                <dd class="col-12 col-lg-10">
                    <p>
                        The card flavor text. This is the card text that is in italics, and can differ
                        across card prints.
                    </p>
                </dd>
            </dl>
        </section>

        <hr class="d-md-none col-12"/>

        <div class="col-md col-lg-4">
            <form @onsubmit="SubmitSearch">
                <p> Enter the card search parameters below </p>

                <div class="form-group">
                    <input @bind="Query.Name"
                        placeholder="@HtmlHelpers.GetDisplay((CardSearch c) => c.Name)"
                        class="form-control" />
                </div>

                <div class="form-group">
                    <input @bind="Query.ManaValue"
                        type="number" min="0"
                        placeholder="@HtmlHelpers.GetDisplay((CardSearch c) => c.ManaValue)"
                        class="form-control" />
                </div>

                <div class="form-group btn-group">
                    @foreach (var (color, symbol) in Symbol.Colors)
                    {
                        <button title="Toggle @color"
                            disabled="@IsLoading" type="button"
                            class="btn btn-outline-secondary ms-filter @ActiveColor(color)"
                            @onclick="() => Query.ToggleColors(color)">

                            <i class="ms ms-@symbol.ToLower() ms-cost"></i>
                        </button>
                    }
                </div>

                <div class="form-group">
                    <input @bind="Query.SetName"
                        placeholder="@HtmlHelpers.GetDisplay((CardSearch c) => c.SetName)"
                        class="form-control" />
                </div>

                <div class="form-group">
                    <select @bind="Query.Rarity"
                        title="Choose Rarity" class="form-control">

                        <option value=""> Choose Rarity </option>

                        @foreach (var rarity in Enum.GetValues<Rarity>())
                        {
                            <option value="@rarity">@rarity</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <input @bind="Query.Types"
                        placeholder="@HtmlHelpers.GetDisplay((CardSearch c) => c.Types)"
                        class="form-control" />
                </div>

                <div class="form-group">
                    <input @bind="Query.Power"
                        placeholder="@HtmlHelpers.GetDisplay((CardSearch c) => c.Power)"
                        class="form-control" />
                </div>

                <div class="form-group">
                    <input @bind="Query.Toughness"
                        placeholder="@HtmlHelpers.GetDisplay((CardSearch c) => c.Toughness)"
                        class="form-control" />
                </div>

                <div class="form-group">
                    <input @bind="Query.Loyalty"
                        placeholder="@HtmlHelpers.GetDisplay((CardSearch c) => c.Loyalty)"
                        class="form-control" />
                </div>

                <div class="form-group">
                    <textarea @bind="Query.Text"
                        placeholder="@HtmlHelpers.GetDisplay((CardSearch c) => c.Text)"
                        class="form-control" />
                </div>

                <div class="form-group">
                    <textarea @bind="Query.Flavor"
                        placeholder="@HtmlHelpers.GetDisplay((CardSearch c) => c.Flavor)"
                        class="form-control" />
                </div>

                <div class="form-group">
                    <input @bind="Query.Artist"
                        placeholder="@HtmlHelpers.GetDisplay((CardSearch c) => c.Artist)"
                        class="form-control" />
                </div>

                <div class="btn-group" role="group">
                    <button type="submit" class="btn btn-secondary"
                        title="Search For Card" disabled="@IsLoading">
                        @if (IsLoading)
                        {
                            <text>
                                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"> </span>
                                Loading...
                            </text>
                        }
                        else
                        {
                            <text> Search </text>
                        }
                    </button>
                </div>

            </form>
        </div>
    </div>
}
else
{
    <form @onsubmit="AddNewCardsAsync">
        <div class="btn-group pb-2" role="group">

            <button title="Reset Search Arguments"
                type="button"
                @onclick="Reset"
                disabled="@IsLoading"
                class="btn btn-danger">
                Reset </button>

            <button title="Add Selected Cards"
                type="submit"
                class="btn btn-secondary"
                disabled="@IsLoading">
                Add Cards/Copies </button>
        </div>

        <div class="table-responsive-md">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col"> @HtmlHelpers.GetDisplay((Card c) => c.Name) </th>
                        <th scope="col"> @HtmlHelpers.GetDisplay((Card c) => c.ManaCost) </th>
                        <th scope="col"> @HtmlHelpers.GetDisplay((Card c) => c.SetName) </th>
                        <th scope="col"> @HtmlHelpers.GetDisplay((Card c) => c.Rarity) </th>
                        <th scope="col"> Copies </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var match in Matches)
                    {
                        var card = match.Card;
                        <tr>
                            <td>
                                <HoverCard Target="card">
                                    @if (match.HasDetails)
                                    {
                                        <a href="/Cards/Details/@card.Id"> @card.Name </a>
                                    }
                                    else
                                    {
                                        <span class="btn-link"> @card.Name </span>
                                    }
                                </HoverCard>
                            </td>
                            <td>
                                <div class="ms-group">
                                    @MtgSymbols.Format(card.ManaCost).ToMarkupString()
                                </div>
                            </td>
                            <td> @card.SetName </td>
                            <td> @card.Rarity </td>
                            <td>
                                <input @bind="match.Copies"
                                    title="@card.Name Copies"
                                    type="number" min="0" max="@match.Limit"
                                    class="form-control amt-input" />
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </form>

    <div class="btn-group pb-3">
        <button title="More Results" type="button"
            class="btn btn-secondary"
            @onclick="LoadMoreCardsAsync"
            disabled="@(HasNoNext || IsLoading)" >
            @if (IsLoading)
            {
                <text>
                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"> </span>
                    Loading...
                </text>
            }
            else
            {
                <text> Load More </text>
            }
        </button>
    </div>
}

@code
{
    internal string ActiveColor(Color color) =>
        Query.Colors.HasFlag(color) ? "active" : string.Empty;
}
