@page
@model Decks.IndexModel
@{
    ViewData["Title"] = $"{Model.UserName} - Decks";
}

@using MtgViewer.Data.Projections
@inject IAuthorizationService AuthorizationService
@inject SymbolFormatter MtgSymbols
@inject CardText CardText

@{
    bool canChangeTreasury = (await AuthorizationService
        .AuthorizeAsync(User, CardPolicies.ChangeTreasury)).Succeeded;
}

<h1>@Model.UserName's Decks</h1>

<div class="row mb-3">
    <div class="col-auto btn-group" role="group">
        @if (canChangeTreasury)
        {
            <a href="/Decks/Craft" class="btn btn-secondary" role="button"> New Deck </a>
        }
        else
        {
            <button role="button" class="btn btn-secondary" disabled> New Deck </button>
        }

        @if (Model.HasUnclaimed && canChangeTreasury)
        {
            <a asp-page="/Unowned/Index" class="btn btn-secondary" role="button"> Unclaimed Decks </a>
        }
        else if (Model.HasUnclaimed)
        {
            <button type="button" class="btn btn-secondary" disabled> Unclaimed Decks </button>
        }
    </div>
</div>

<div class="table-responsive-md">
    <table class="table">
        <thead>
            <tr>
                <th scope="col"> @Html.DisplayNameForInnerType((Deck d) => d.Name) </th>
                <th scope="col"> @Html.DisplayNameForInnerType((Deck d) => d.Color) </th>
                <th scope="col"> Held Cards </th>
                <th scope="col"> Wanted Cards </th>
                <th scope="col"> State </th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var deck in Model.Decks)
            {
                <tr>
                    <td>
                        <a asp-page="Details" asp-route-id="@deck.Id">
                            @deck.Name </a>
                    </td>

                    <td>
                        <div class="ms-group">
                            @MtgSymbols.Format(CardText.ColorString(deck.Color)).ToHtmlString()
                        </div>
                    </td>

                    <td> @deck.HeldCopies </td>
                    <td> @deck.WantCopies </td>

                    <td>
                        @if (deck.BuildState is BuildState.Requesting && canChangeTreasury)
                        {
                            <a asp-page="/Transfers/Details" asp-route-id="@deck.Id">
                                @deck.BuildState.ToString() </a>
                        }
                        else if (deck.BuildState is BuildState.Theorycraft && canChangeTreasury)
                        {
                            <a asp-page="Exchange" asp-route-id="@deck.Id">
                                @deck.BuildState.ToString() </a>
                        }
                        else
                        {
                            @deck.BuildState.ToString()
                        }
                    </td>

                    <td class="btn-group" role="group">
                        @if (deck.BuildState is not BuildState.Requesting && canChangeTreasury)
                        {
                            <a href="/Decks/Craft/@deck.Id"
                                class="btn btn-secondary" role="button">
                                Edit </a>
                        }
                        else
                        {
                            <button class="btn btn-secondary" type="button" disabled> Edit </button>
                        }

                        <a asp-page="/Transactions/Index" asp-route-id="@deck.Id"
                            class="btn btn-secondary" role="button">
                            History </a>

                        @if (canChangeTreasury)
                        {
                            <a asp-page="Delete" asp-route-id="@deck.Id"
                                class="btn btn-danger" role="button">
                                &times; </a>
                        }
                        else
                        {
                            <button class="btn btn-danger" type="button" disabled>
                                &times; </button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<partial name="_SeekPagingPartial" model="(Seek)Model.Decks.Seek"/>
