@page "{id:int}"
@model Transfers.DetailsModel
@{
    ViewData["Title"] = $"{Model.Deck.Name} - Sent Trades";
}
@inject SymbolFormatter MtgSymbols
@inject CardText CardText


<h1>Trades To @Model.Deck.Name</h1>
<hr />

<div class="alert alert-secondary" role="alert">
    <h5 class="alert-heading">Do you want cancel the requests listed below?</h5>
    <p>Cancelling will allow for edits to @Model.Deck.Name</p>

    <form method="POST">
        <input type="submit"
            class="btn btn-danger"
            value="Cancel Requests" />
    </form>
</div>


<h3>Sent Trades</h3>

<div class="table-responsive-md">
    <table class="table">
        <thead>
            <tr>
                <th scope="col"> @Html.DisplayNameForInnerType((Trade t) => t.Card) </th>
                <th scope="col"> @Html.DisplayNameForInnerType((Card c) => c.SetName) </th>
                <th scope="col"> Trade With </th>
                <th scope="col"> @Html.DisplayNameForInnerType((Trade t) => t.From) </th>
                <th scope="col"> Deck Color </th>
                <th scope="col"> @Html.DisplayNameForInnerType((Trade t) => t.Copies) </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var trade in Model.Trades)
            {
                <tr>
                    <td>
                        <component type="typeof(HoverCard)" render-mode="Static"
                            param-Preview="trade.Card" />
                    </td>

                    <td> @trade.Card.SetName </td>
                    <td> @trade.Target.Owner.Name </td>

                    <td>
                        <a asp-page="/Decks/Details"
                            asp-route-id="@trade.Target.Id">
                            @trade.Target.Name </a>
                    </td>
                    <td> 
                        <div class="ms-group">
                            @MtgSymbols.Format(CardText.ColorString(trade.Target.Color)).ToHtmlString() 
                        </div>
                    </td>
                    <td> @trade.Copies </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<partial name="_OffsetPagingPartial" for="Trades.Offset"/>


<h3>
    <a asp-page="/Decks/Details" asp-route-id="@Model.Deck.Id">
        Current Cards
    </a>
</h3>

<div class="table-responsive-md">
    <table class="table">
        <thead>
            <tr>
                <th scope="col"> @Html.DisplayNameForInnerType((Hold ca) => ca.Card) </th>
                <th scope="col"> @Html.DisplayNameForInnerType((Card c) => c.ManaCost) </th>
                <th scope="col"> @Html.DisplayNameForInnerType((Card c) => c.SetName) </th>
                <th scope="col"> Held </th>
                <th scope="col"> Wanted </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var card in Model.Cards)
            {
                <tr>
                    <td>
                        <a asp-page="/Cards/Details" asp-route-id="@card.Id">
                            @card.Name </a>
                    </td>
                    <td> 
                        <div class="ms-group">
                            @MtgSymbols.Format(card.ManaCost).ToHtmlString() 
                        </div>
                    </td>
                    <td> @card.SetName </td>
                    <td> @card.Held </td>
                    <td> @card.Want </td>
                </tr>
            }
            @if (Model.Deck.HeldCopies > Model.Cards.Sum(dl => dl.Held)
                || Model.Deck.WantCopies > Model.Cards.Sum(dl => dl.Want))
            {
                <tr>
                    <td> ... </td>
                    <td> ... </td>
                    <td> ... </td>
                    <td> ... </td>
                    <td> ... </td>
                </tr>
            }
        </tbody>
    </table>
</div>