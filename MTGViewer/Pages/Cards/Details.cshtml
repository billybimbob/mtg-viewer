@page "{id}"
@model Cards.DetailsModel
@using Microsoft.AspNetCore.Mvc.Rendering
@{
    ViewData["Title"] = "Details";
}

@inject Services.IconMarkup Icons


<h1> @Model.Card.Name
</h1>
<hr />

@if (Model.CardAlts.Count > 1)
{
    <div class="dropdown">

        <button id="altButton" type="button" class="btn btn-secondary dropdown-toggle"
            data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" >
            Alternate Versions
        </button>

        <div class="dropdown-menu" aria-labelledby="altButton">
            @foreach (var card in Model.CardAlts)
            {
                @if (card.Id == Model.Card.Id)
                {
                    continue;
                }

                <a class="dropdown-item" asp-page="Details" asp-route-id="@card.Id" >
                    @card.Name (@card.SetName)
                </a>
            }
        </div>
    </div>
    <hr />
}

<div class="container">
    <div class="row justify-content-center">

        <div class="col align-self-center" >
            <img alt="@Model.Card.Name" src="@Model.Card.ImageUrl"/>
        </div>

        <div class="col-8">
            <dl class="row">

                <dt class="col-3">
                    @Html.DisplayNameFor(m => m.Card.ManaCost)
                </dt>
                <dd class="col">
                    @Icons.InjectSymbols(Model.Card.ManaCost).ToHtmlString()
                </dd>

                <div class="w-100"></div>

                <dt class="col-3">
                    @Html.DisplayNameFor(m => m.Card.Cmc)
                </dt>
                <dd class="col">
                    @Html.DisplayFor(m => m.Card.Cmc)
                </dd>
                    
                <div class="w-100"></div>

                <dt class="col-3">
                    @Html.DisplayNameFor(m => m.Card.Rarity)
                </dt>
                <dd class="col">
                    @Html.DisplayFor(m => m.Card.Rarity)
                </dd>

                <div class="w-100"></div>

                <dt class="col-3">
                    @Html.DisplayNameFor(m => m.Card.SetName)
                </dt>
                <dd class="col">
                    @Html.DisplayFor(m => m.Card.SetName)
                </dd>

                <div class="w-100"></div>

                <dt class="col-3">
                    @Html.DisplayNameFor(m => m.Card.SuperTypes)
                </dt>
                <dd class="col">
                    @(string.Join(" ", Model.Card.SuperTypes.Select(st => st.Name)))
                </dd>

                <div class="w-100"></div>

                <dt class="col-3">
                    @Html.DisplayNameFor(m => m.Card.Types)
                </dt>
                <dd class="col">
                    @(string.Join(" ", Model.Card.Types.Select(st => st.Name)))
                </dd>

                <div class="w-100"></div>
            
                <dt class="col-3">
                    @Html.DisplayNameFor(m => m.Card.SubTypes)
                </dt>
                <dd class="col">
                    @(string.Join(" ", Model.Card.SubTypes.Select(st => st.Name)))
                </dd>

                <div class="w-100"></div>
            
                <dt class="col-3">
                    @Html.DisplayNameFor(m => m.Card.Text)
                </dt>
                <dd class="col">
                    @Icons.InjectSymbols(Model.Card.Text).ToHtmlString()
                </dd>

                <div class="w-100"></div>

                <dt class="col-3">
                    @Html.DisplayNameFor(m => m.Card.Flavor)
                </dt>
                <dd class="col">
                    @Html.DisplayFor(m => m.Card.Flavor)
                </dd>

                <div class="w-100"></div>

                <dt class="col-3">
                    @Html.DisplayNameFor(m => m.Card.Artist)
                </dt>
                <dd class="col">
                    @Html.DisplayFor(m => m.Card.Artist)
                </dd>

                <div class="w-100"></div>

                <dt class="col-3">
                    @Html.DisplayNameFor(m => m.Card.Power)
                </dt>
                <dd class="col">
                    @Html.DisplayFor(m => m.Card.Power)
                </dd>

                <div class="w-100"></div>

                <dt class="col-3">
                    @Html.DisplayNameFor(m => m.Card.Toughness)
                </dt>
                <dd class="col">
                    @Html.DisplayFor(m => m.Card.Toughness)
                </dd>

                <div class="w-100"></div>

                <dt class="col-3">
                    @Html.DisplayNameFor(m => m.Card.Loyalty)
                </dt>
                <dd class="col">
                    @Html.DisplayFor(m => m.Card.Loyalty)
                </dd>

            </dl>
        </div>

    </div>
</div>

<div>
    <!-- js hack -->
    <!--a href="javascript:history.go(-1)" -->
    <a href="@Model.Reffer"
       class="btn btn-secondary mb-3">
       Back </a>

    <!--a asp-page="./Edit"
       asp-route-id="@Model.Card.Id"
       class="btn btn-secondary mb-3">
       Edit </a-->

    @if (Model.IsSignedIn)
    {
        <a asp-page="./Delete"
           asp-route-id="@Model.Card.Id"
           class="btn btn-danger mb-3">
           Delete </a>
    }
</div>
