@page "{id:int}"
@model Treasury.DetailsModel
@{
    ViewData["Title"] = $"{Model.Box.Name} - Details";
}

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using MTGViewer.Areas.Identity.Data

@inject IAuthorizationService AuthorizationService
@inject SignInManager<CardUser> SignInManager
@inject SymbolFormatter MtgSymbols


<h1> @Model.Box.Name - @Model.Box.Bin.Name </h1>

@if (SignInManager.IsSignedIn(User))
{
    bool canChangeTreasury = (await AuthorizationService
        .AuthorizeAsync(User, CardPolicies.ChangeTreasury)).Succeeded; 

    <div class="btn-group mb-3" role="group">
        @if (canChangeTreasury)
        {
            <a href="/Treasury/Adjust/@Model.Box.Id"
                class="btn btn-secondary" role="button">
                Edit </a>

            <a asp-page="Delete" asp-route-id="@Model.Box.Id"
                class="btn btn-danger" role="alert">
                Delete </a>
        }
        else
        {
            <button class="btn btn-secondary" type="button" disabled> Edit </button>
            <button class="btn btn-danger" type="button" disabled> Delete </button>
        }
    </div>
}

<div class="table-responsive-md">
    <table class="table">
        <thead>
            <tr>
                <th scope="col"> @Html.DisplayNameForInnerType((Hold h) => h.Card) </th>
                <th scope="col"> @Html.DisplayNameForInnerType((Card c) => c.ManaCost) </th>
                <th scope="col"> @Html.DisplayNameForInnerType((Card c) => c.SetName) </th>
                <th scope="col"> @Html.DisplayNameForInnerType((Hold h) => h.Copies) </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var quantity in Model.Cards)
            {
                var returnUrl = $"{Request.Path}{Request.QueryString}";
                <tr>
                    <td>
                        <component type="typeof(HoverCard)" render-mode="Static"
                            param-Preview="quantity.Card" param-ReturnUrl="returnUrl" />
                    </td>
                    <td> 
                        <div class="ms-group">
                            @MtgSymbols.Format(quantity.Card.ManaCost).ToHtmlString() 
                        </div>
                    </td>
                    <td> @quantity.Card.SetName </td>
                    <td> @quantity.Copies </td>
                </tr>
            }
            <tr>
                <th> Total </th>
                <td> -- </td>
                <td> -- </td>
                <td class="font-weight-bold">
                    @Model.Box.TotalHolds / @Model.Box.Capacity
                </td>
            </tr>
        </tbody>
    </table>
</div>

@if (!string.IsNullOrWhiteSpace(Model.Box.Appearance))
{
    <h4> @Html.DisplayNameFor(m => m.Box.Appearance) </h4>
    <p> @Html.DisplayFor(m => m.Box.Appearance) </p>
}

<partial name="_SeekPagingPartial" for="Seek"/>