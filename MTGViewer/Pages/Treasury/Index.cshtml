@page "{pageIndex:int?}"
@model Treasury.IndexModel
@{
    ViewData["Title"] = $"Treasury ({Model.Offset})";
}

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using MTGViewer.Areas.Identity.Data

@inject IAuthorizationService AuthorizationService
@inject SignInManager<CardUser> SignInManager
@inject SymbolFormatter MtgSymbols

@{
    bool canChangeTreasury = (await AuthorizationService
        .AuthorizeAsync(User, CardPolicies.ChangeTreasury)).Succeeded;

    bool isSignedIn = SignInManager.IsSignedIn(User);
}

<h1>Treasury</h1>

<div class="row mb-3">
    @if (isSignedIn)
    {
        <div class="col-auto btn-group pr-2" role="group" aria-label="Treasury Backup">
            @if (canChangeTreasury)
            {
                <a href="/Treasury/Adjust" class="btn btn-secondary" role="button"> Add Box </a>
                <a href="/Treasury/Import" class="btn btn-secondary" role="button"> Import </a>
            }
            else
            {
                <button class="btn btn-secondary" type="button" disabled> Add Box </button>
                <button class="btn btn-secondary" type="button" disabled> Import </button>
            }

            <a asp-page="Export" class="btn btn-secondary" role="button"> Export </a>
        </div>
    }
    <div class="col-auto btn-group pr-2" role="group" aria-label="Treasury Miscellaneous">

        <a asp-page="History" class="btn btn-secondary" role="button"> History </a>

        @if (Model.HasExcess)
        {
            <a asp-page="Excess" class="btn btn-secondary" role="button"> Excess </a>
        }

        @if (Model.HasUnclaimed && isSignedIn)
        {
            @if (canChangeTreasury)
            {
                <a asp-page="/Unowned/Index" class="btn btn-secondary" role="button"> Unclaimed Decks </a>
            }
            else
            {
                <button class="btn btn-secondary" type="button" disabled> Unclaimed Decks </button>
            }
        }
    </div>
</div>

@if (!Model.Bins.Any())
{
    <h3> There are no Boxes in the Collection </h3>
}

@foreach (var bin in Model.Bins)
{
    <h3> @bin.Name </h3>

    <div class="table-responsive-md">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th scope="col"> Box </th>
                    <th scope="col"> @Html.DisplayNameForInnerType((Amount a) => a.Card) </th>
                    <th scope="col"> @Html.DisplayNameForInnerType((Card c) => c.ManaCost) </th>
                    <th scope="col"> @Html.DisplayNameForInnerType((Card c) => c.SetName) </th>
                    <th scope="col"> @Html.DisplayNameForInnerType((Amount a) => a.NumCopies) </th>
                    <th scope="col"> @Html.DisplayNameForInnerType((Box b) => b.Capacity) </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var box in bin.Boxes)
                {
                    var firstAmount = box.Cards.FirstOrDefault();
                    int boxSpan = Math.Max(1, box.Cards.Count);

                    <tr>
                        <th scope="rowgroup" rowspan="@boxSpan">
                            <a asp-page="Details" asp-route-id="@box.Id">
                                @box.Name </a>
                        </th>

                        @if (firstAmount != default)
                        {
                            <td>
                                <a asp-page="/Cards/Details" asp-route-id="@firstAmount.CardId">
                                    @firstAmount.Card.Name </a>
                            </td>

                            <td> 
                                <div class="ms-group">
                                    @MtgSymbols.Format(firstAmount.Card.ManaCost).ToHtmlString() 
                                </div>
                            </td>
                            <td> @firstAmount.Card.SetName </td>
                            <td> @firstAmount.NumCopies </td>
                        }
                        else
                        {
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                        }

                        <td rowspan="@boxSpan"> @box.Cards.Sum(a => a.NumCopies) / @box.Capacity </td>
                    </tr>

                    @foreach (var amount in box.Cards.Skip(1))
                    {
                        <tr>
                            <td>
                                <a asp-page="/Cards/Details" asp-route-id="@amount.CardId">
                                    @amount.Card.Name </a>
                            </td>
                            <td> 
                                <div class="ms-group">
                                    @MtgSymbols.Format(amount.Card.ManaCost).ToHtmlString()
                                </div>
                            </td>
                            <td> @amount.Card.SetName </td>
                            <td> @amount.NumCopies </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
}

<partial name="_PaginationPartial" for="Offset"/>