@page "{id:int}"
@model Treasury.DeleteModel
@{
    ViewData["Title"] = $"{Model.Box.Name} - Delete";
}
@inject SymbolFormatter MtgSymbols


<h1> Delete @Model.Box.Name </h1>

<div class="alert alert-warning" role="alert">
    <h5 class="alert-heading">Are you sure you want to delete this box?</h5>
    <p>
        All current cards in the deck will be automatically moved to other
        boxes in the Treasury
    </p>

    <form method="POST">
        <div class="btn-group" role="group">
            <a asp-page="Details" asp-route-id="@Model.Box.Id"
                class="btn btn-secondary" role="button">
                Cancel </a>

            <input type="submit" value="Delete" class="btn btn-danger" />
        </div>
    </form>
</div>

<div class="table-responsive-md">
    <table class="table">
        <thead>
            <tr>
                <th scope="col"> @Html.DisplayNameForInnerType((Hold h) => h.Card) </th>
                <th scope="col"> @Html.DisplayNameForInnerType((Card c) => c.ManaCost) </th>
                <th scope="col"> @Html.DisplayNameForInnerType((Card c) => c.SetName) </th>
                <th scope="col"> @Html.DisplayNameForInnerType((Hold h) => h.Copies) </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var card in Model.Box.Cards)
            {
                <tr>
                    <td>
                        <a asp-page="/Cards/Details" asp-route-id="@card.Id">
                            @card.Name </a>
                    </td>
                    <td> 
                        <div class="ms-group">
                            @MtgSymbols.Format(card.ManaCost).ToHtmlString() 
                        </div>
                    </td>
                    <td> @card.SetName </td>
                    <td> @card.Held </td>
                </tr>
            }
            @if (Model.Box.HasMoreCards)
            {
                <tr>
                    <td> ... </td>
                    <td> ... </td>
                    <td> ... </td>
                    <td> ... </td>
                </tr>
            }
            <tr>
                <th> Total </th>
                <td> -- </td>
                <td> -- </td>
                <td class="font-weight-bold">
                    @Model.Box.Held / @Model.Box.Capacity
                </td>
            </tr>
        </tbody>
    </table>
</div>

@if (!string.IsNullOrWhiteSpace(Model.Box.Appearance))
{
    <h4> @Html.DisplayNameFor(b => b.Box.Appearance) </h4>
    <p> @Html.DisplayFor(b => b.Box.Appearance) </p>
}