@page "{id:int}"
@model Decks.DeleteModel
@{
    ViewData["Title"] = "Delete Deck";
}
@inject SymbolFormatter MtgSymbols


<h1>Delete @Model.Deck.Name</h1>
<hr />

<div class="alert alert-warning" role="alert">
    <h5>Are you sure you want to delete this deck?</h5>
    <p>
        All current cards in the deck will be automatically returned 
        to the shared storage
    </p>

    <form method="POST">
        <!-- js hack -->
        <a href="javascript:history.go(-1)"
            class="btn btn-secondary">
            Back </a>

        <input type="hidden" asp-for="Deck.Id" />
        <input type="submit" value="Delete" class="btn btn-danger" />
    </form>
</div>

<table class="table mt-2">
    <thead>
        <tr>
            <th>Card Name</th>
            <th>Mana Cost</th>
            <th>Set</th>
            <th>Deck Amount</th>
            <th>Requests</th>
        </tr>
    </thead>

    <tbody>
        @foreach (var nameGroup in Model.NameGroups)
        {
            var card = nameGroup.Cards.First();
            <tr>
                <td>
                    <a asp-page="/Cards/Details"
                       asp-route-id="@card.Id"
                       class="fw-bold">
                       @nameGroup.Name </a>
                </td>
                <td> @(MtgSymbols.Format(card.ManaCost).ToHtmlString()) </td>

                <td>@card.SetName</td>
                <td>@nameGroup.InDeck</td>
                <td>@nameGroup.Requests</td>
            </tr>
        }
    </tbody>
</table>


@if (Model.Trades.Any())
{
    <div class="my-3">
        <h3>The following trades will also be deleted</h3>
        <table class="table">
            <thead>
                <tr>
                    <th> @Html.DisplayNameForInnerType((Trade t) => t.To) </th>
                    <th> @Html.DisplayNameForInnerType((Trade t) => t.From) </th>
                    <th> @Html.DisplayNameForInnerType((Trade t) => t.Card) </th>
                    <th> @Html.DisplayNameForInnerType((Card c) => c.ManaCost) </th>
                </tr>
            </thead>
            <tbody>
                @foreach(var trade in Model.Trades)
                {
                    <tr>
                        <td> @trade.To.Name </td>
                        <td> @trade.From.Name </td>
                        <td> @trade.Card.Name </td>
                        <td> @(MtgSymbols.Format(trade.Card.ManaCost).ToHtmlString()) </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}