@page
@using MTGViewer.Data
@model MTGViewer.Pages.Decks.IndexModel

@{
    ViewData["Title"] = $"Decks - {Model.CardUser.Name}";
}


@if (!string.IsNullOrEmpty(Model.PostMessage))
{
    <div class="alert alert-secondary" role="alert">
        @Model.PostMessage
    </div>
}

@*
@if (Model.PickedRequest != null)
{
    <h2>Request Options for @Model.PickedRequest.Card.Name</h2>

    <form method="POST">
        <table class="table">
            <thead>
                <tr>
                    <th> Deck @Html.DisplayNameForInnerType((Deck d) => d.Name) </th> 
                    <th> @Html.DisplayNameForInnerType((Deck d) => d.Owner) </th> 
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var source in Model.RequestSources)
                {
                    <tr>
                        <td> @source.Name </td>
                        <td> @source.Owner.Name </td>
                        <td>
                            <input type="radio" name="deckId" value="@source.Id" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="form-group">
            <label for="amount">Amount to Request: </label>
            <output id="result" for="amount">1</output>

            <input type="range"
                   id="amount"
                   name="amount"
                   class="form-control-range"
                   min="1" max="@Model.PickedRequest.Amount"
                   value="1"
                   oninput="result.value = value" />
        </div>

        <input type="submit"
               asp-page-handler="Submit"
               asp-route-requestid="@Model.PickedRequest.Id"
               class="btn btn-secondary mb-3"
               value="Submit" />
    </form>
}
else
{
 *@
 
<h2>@Model.CardUser.Name's Decks</h2>

<a class="btn btn-secondary" asp-page="./Builder">New Deck</a>

<table class="table">
    <thead>
        <tr>
            <th>
                Deck @Html.DisplayNameForInnerType((Deck d) => d.Name)
            </th>
            <th>Number of Cards</th>
            <th>Colors</th>
            <th>State</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var (deck, colors, state) in Model.DeckColors)
        {
            <tr>
                <td> @deck.Name </td>
                <td> @deck.Cards.Select(ca => ca.Amount).Sum() </td>
                <td>
                    @foreach (var color in colors)
                    {
                        <span class="m-1 ms ms-@color ms-cost"></span>
                    }
                </td>
                <td> @state.ToString() </td>
                <td>
                    @switch (state)
                    {
                        case IndexModel.DeckState.Invalid:
                            <a asp-page="./Builder"
                               asp-route-id="@deck.Id"
                               class="btn btn-secondary mb-3">
                               Edit </a>

                            <a asp-page="./Delete"
                               asp-route-id="@deck.Id"
                               class="btn btn-secondary mb-3">
                               Delete </a>

                            <a asp-page="/Transfers/Request"
                               asp-route-deckid="@deck.Id"
                               class="btn btn-secondary mb-3">
                               Request </a>
                            break;

                        case IndexModel.DeckState.Valid:
                            <a asp-page="./Builder"
                               asp-route-id="@deck.Id"
                               class="btn btn-secondary mb-3">
                               Edit </a>

                            <a asp-page="./Delete"
                               asp-route-id="@deck.Id"
                               class="btn btn-secondary mb-3">
                               Delete </a>
                            break;

                        case IndexModel.DeckState.Requesting:
                            <a asp-page="/Transfers/Status"
                               asp-route-deckid="@deck.Id"
                               class="btn btn-secondary mb-3">
                               Status </a>
                            break;
                        
                        default:
                            break;
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@* 
<h2>@Model.CardUser.Name's Request Trade Options</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameForInnerType((CardAmount ca) => ca.Card) Name
            </th>
            <th> Deck </th>
            <th>
                @Html.DisplayNameForInnerType((CardAmount ca) => ca.Amount)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        <form method="POST">
            @foreach (var request in Model.Requests)
            {
                <tr>
                    <td> @request.Card.Name </td>
                    <td> @request.Location.Name </td>
                    <td> @request.Amount </td>
                    <td>
                        <input type="submit"
                                asp-page-handler="Request"
                                asp-route-requestid="@request.Id"
                                class="btn btn-secondary mb-3"
                                value="Request" />
                    </td>
                </tr>
            }
        </form>
    </tbody>
</table>

} *@