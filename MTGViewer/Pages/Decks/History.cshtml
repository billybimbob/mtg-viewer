@page "{id:int}/{pageIndex:int?}"
@model Decks.HistoryModel
@{
    ViewData["Title"] = $"{Model.Deck.Name} Change History";
}

<h1>
    Changes To
    <a asp-page="Viewer" asp-route-id="@Model.Deck.Id">
        @Model.Deck.Name </a>
</h1>

@if (!string.IsNullOrEmpty(Model.PostMessage))
{
    <div class="alert alert-secondary" role="alert">
        @Model.PostMessage
    </div>
}

<div class="row">
    <div class="col">

        <table class="table table-bordered">
            <thead>
                <tr>
                    <th scope="col"> @Html.DisplayNameForInnerType((Transaction t) => t.AppliedAt) </th>
                    <th scope="col"> @Html.DisplayNameForInnerType((Change c) => c.From) </th>
                    <th scope="col"> @Html.DisplayNameForInnerType((Change c) => c.To) </th>
                    <th scope="col"> @Html.DisplayNameForInnerType((Change c) => c.Card) </th>
                    <th scope="col"> @Html.DisplayNameForInnerType((Change c) => c.Amount) </th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var (transaction, from, to, changes) in Model.Transfers)
                {
                    var transferKey = (transaction.Id, from?.Id, to.Id);
                    var isFirstTransfer = Model.IsFirstTransfer.Contains(transferKey);
                    var first = changes.First();

                    <tr>
                        @if (isFirstTransfer)
                        {
                            <th scope="rowgroup" rowspan="@transaction.Changes.Count"> @transaction.AppliedAt </th>
                        }

                        <td rowspan="@changes.Count">
                            @if (from is Deck fromDeck && from.Id != Model.Deck.Id)
                            {
                                <a asp-page="Viewer" asp-route-id="@fromDeck.Id"> @fromDeck.Name </a>
                            }
                            else
                            {
                                @(from?.Name)
                            }
                        </td>

                        <td rowspan="@changes.Count">
                            @if (to is Deck toDeck && to.Id != Model.Deck.Id)
                            {
                                <a asp-page="Viewer" asp-route-id="@toDeck.Id"> @toDeck.Name </a>
                            }
                            else
                            {
                                @to.Name
                            }
                        </td>

                        <td> 
                            @(await Html.RenderComponentAsync<HoverCard>(
                                RenderMode.Static, new { Card = (CardPreview) first.Card }))
                        </td>
                        <td> @first.Amount </td>

                        @if (isFirstTransfer)
                        {
                            <td rowspan="@transaction.Changes.Count">
                                <form method="POST">
                                    <input type="hidden" asp-for="Deck.Id" />
                                    <input type="hidden" asp-for="@transaction.Id" name="transactionId"/>
                                    <input type="submit" value="Remove" class="btn btn-secondary" />
                                </form>
                            </td>
                        }
                    </tr>

                    @foreach (var change in changes.Skip(1))
                    {
                        <tr>
                            <td>
                                @(await Html.RenderComponentAsync<HoverCard>(
                                    RenderMode.Static, new { Card = (CardPreview) change.Card }))
                            </td>
                            <td> @change.Amount </td>
                        </tr>
                    }
                }
            </tbody>
        </table>


        @if (Model.Pages.HasMultiple)
        {
            var pages = Model.Pages;
            var prevDisabled = pages.HasPrevious ? "" : "disabled";
            var nextDisabled = pages.HasNext ? "" : "disabled";

            <nav aria-label="@Model.Deck.Name History Pages">
                <ul class="pagination justify-content-center">

                    <li class="page-item @prevDisabled">
                        @if (pages.HasPrevious)
                        {
                            <a asp-page="History" 
                                asp-route-id="@Model.Deck.Id"
                                asp-route-pageIndex="@(pages.Current - 1)"
                                class="page-link">
                                &laquo; </a>
                        }
                        else
                        {
                            <span class="page-link">&laquo;</span>
                        }
                    </li>

                    @for (int i = 0; i < pages.Total; ++i)
                    {
                        var pageIndex = i;
                        var activePage = pageIndex == pages.Current ? "active" : "";

                        <li class="page-item @activePage">
                            @if (pageIndex != pages.Current)
                            {
                                <a asp-page="History"
                                    asp-route-id="@Model.Deck.Id"
                                    asp-route-pageIndex="@pageIndex"
                                    class="page-link">
                                    @(pageIndex + 1) </a>
                            }
                            else
                            {
                                <span class="page-link">
                                    @(pageIndex + 1)
                                    <span class="sr-only">(current)</span>
                                </span>
                            }
                        </li>
                    }

                    <li class="page-item @nextDisabled">
                        @if (pages.HasNext)
                        {
                            <a asp-page="History"
                                asp-route-id="@Model.Deck.Id"
                                asp-route-pageIndex="@(pages.Current + 1)"
                                class="page-link">
                                &raquo; </a>
                        }
                        else
                        {
                            <span class="page-link">&raquo;</span>
                        }
                    </li>

                </ul>
            </nav>
        }
    </div>
</div>