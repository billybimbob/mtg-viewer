@page "{id:int}"
@model Decks.DetailsModel
@{
    ViewData["Title"] = $"{Model.Deck.Name} - Details";
}

@using Microsoft.AspNetCore.Authorization
@using MTGViewer.Areas.Identity.Data

@inject IAuthorizationService AuthorizationService
@inject SymbolFormatter MtgSymbols

@{ 
    bool canChangeTreasury = (await AuthorizationService
        .AuthorizeAsync(User, CardPolicies.ChangeTreasury)).Succeeded;
}


<h1>@Model.Deck.Owner.Name's @Model.Deck.Name</h1>

@if (Model.IsOwner)
{
    <div class="btn-group mb-3" role="group">
        @if (Model.Deck.HasTrades || !canChangeTreasury)
        {
            <button class="btn btn-secondary" type="button" disabled> Edit </button>
        }
        else
        {
            <a href="/Decks/Craft/@Model.Deck.Id"
                class="btn btn-secondary" role="button">
                Edit </a>
        }

        <a asp-page="History" asp-route-id="@Model.Deck.Id"
            class="btn btn-secondary" role="button">
            History </a>

        @if (canChangeTreasury)
        {
            <a asp-page="Delete" asp-route-id="@Model.Deck.Id"
                class="btn btn-danger" role="button">
                Delete </a>
        }
        else
        {
            <button type="button" class="btn btn-danger" disabled> Delete </button>
        }
    </div>
}


@{ string returnUrl = $"{Request.Path}{Request.QueryString}"; }

<div class="table-responsive-md">
    <table class="table">
        <thead>
            <tr>
                <th scope="col"> @Html.DisplayNameForInnerType((Hold ca) => ca.Card) </th>
                <th scope="col"> @Html.DisplayNameForInnerType((Card c) => c.ManaCost) </th>
                <th scope="col"> @Html.DisplayNameForInnerType((Card c) => c.SetName) </th>
                <th scope="col"> Held </th>
                <th scope="col"> Wanted </th>
                <th scope="col"> Returning </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var card in Model.Cards)
            {
                <tr>
                    <td>
                        <component type="typeof(HoverCard)" render-mode="Static"
                            param-Preview="card" param-ReturnUrl="returnUrl" />
                    </td>
                    <td> 
                        <div class="ms-group">
                            @MtgSymbols.Format(card.ManaCost).ToHtmlString() 
                        </div>
                    </td>
                    <td> @card.SetName </td>

                    <td> @card.Held </td>
                    <td> @card.Want </td>
                    <td> @card.Returning </td>
                </tr>
            }
            <tr>
                <th> Total </th>
                <td> -- </td>
                <td> -- </td>
                <td> <strong>@Model.Deck.HeldCopies</strong> </td>
                <td> <strong>@Model.Deck.WantCopies</strong> </td>
                <td> <strong>@Model.Deck.ReturnCopies</strong> </td>
            </tr>
        </tbody>
    </table>
</div>

<partial name="_SeekPagingPartial" model="(Seek)Model.Cards.Seek" />