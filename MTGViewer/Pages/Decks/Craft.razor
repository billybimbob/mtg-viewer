@page "/Decks/Craft/{DeckId:int?}"
@inherits OwningComponentBase
@inject SymbolFormatter MtgSymbols

<PageTitle> @DeckName - Builder </PageTitle>

@if (DeckEdit?.Model is Deck deck)
{
    <EditForm EditContext="@DeckEdit">
        <div class="row">
            <div class="col col-md-6">
                <InputText 
                    class="form-control form-control-lg mb-3"
                    @bind-Value="deck.Name" 
                    DisplayName="Deck Name"/>

                <DataAnnotationsValidator />
                <ValidationSummary />
            </div>
        </div>
    </EditForm>
}
else
{
    <div class="row">
        <div class="col col-md-6">
            <input type="text" class="form-control form-control-lg mb-3"
                placeholder="Deck Builder" readonly />
        </div>
    </div>
}

<div class="btn-group mb-3" role="group">
    <button title="Save Deck" type="button"
        class="btn btn-secondary" 
        disabled="@(IsBusy || CannotSave())"
        @onclick="CommitChangesAsync">
        @if (IsBusy)
        {
            <text>
                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"> </span>
                Loading...
            </text>
        }
        else
        {
            <text> Save Changes </text>
        }
    </button>

    @if (GetExchangeDeck() is Deck exchangeDeck)
    {
        <a href="/Decks/Exchange/@exchangeDeck.Id"
            class="btn btn-secondary" role="button">
            Exchange </a>
    }
    else
    {
        <button title="To Exchange Page" type="button"
            class="btn btn-secondary"
            disabled="true">
            Exchange </button>
    }
</div>

<SavePrompt @bind-Result="Result">
    <SuccessMessage>
        <p>Save was succesful, and values have been updated.</p>
        <p class="mb-1">The wanted cards are not actually removed from the Treasury. Proceed to the Exchange page to take from the Treasury.</p>
    </SuccessMessage>
    <ErrorMessage>
        <p>There are conflicts while trying to save, and values have been updated. </p>
        <hr />
        <p>Save again to confirm.</p>
    </ErrorMessage>
</SavePrompt>

<div class="form-row align-items-center my-3">
    <div class="col-12 col-md-4">
        <input class="form-control"
            placeholder="Card Name"
            disabled="@IsBusy"
            @bind="_treasuryFilters.SearchName" />
    </div>

    <div class="col-auto btn-group pt-2 pt-md-0" role="group" aria-label="Color Buttons">
        @foreach (var (color, symbol) in Symbol.Colors)
        {
            <button title="@color filter" type="button"
                class="btn btn-outline-secondary border-0 rounded @ActiveColor(color)"
                disabled="@IsBusy"
                @onclick="() => ToggleColor(color)">

                <i class="ms ms-@symbol.ToLower() ms-cost"></i>
            </button>
        }
    </div>
</div>

<div class="row">
    <section class="col-12 col-lg-7">
        <h3>Treasury</h3>

        <div class="list-group list-group-flush mb-4">
            @if (!Treasury.Any())
            {
                <div class="list-group-item disabled px-2" aria-disabled="true">
                    <div class="row">
                        <div class="col-6"> --- </div>
                        <div class="col-4"> --- </div>
                        <div class="col-2"> --- </div>
                    </div>
                </div>
            }
            @foreach (var card in Treasury)
            {
                int available = TreasuryCopies(card);
                int wantTotal = card.Wants.Sum(w => w.NumCopies);

                <button type="button" title="Add @card.Name"
                    class="list-group-item list-group-item-action px-2"
                    @onclick="() => AddCardToDeck(card)">

                    <div class="row">
                        <div class="col-6"> 
                            <HoverCard Target="card"> 
                                <span class="btn-link">@card.Name</span>
                            </HoverCard>
                        </div>

                        <div class="col-4"> @MtgSymbols.Format(card.ManaCost).ToMarkupString() </div>
                        <div class="col-2"> @(available - Math.Min(wantTotal, available)) </div>
                    </div>
                </button>
            }
        </div>

        <OffsetPaging Offset="Treasury.Offset" PageSelected="ChangeTreasuryPage" />
    </section>


    <section class="col">
        <h3>@DeckName</h3>

        @{ var deckCards = PagedDeckCards(); }

        <div class="list-group list-group-flush mb-4">
            @foreach (var group in deckCards)
            {
                var card = group.Card;

                <button type="button" title="Remove @card.Name"
                    class="list-group-item list-group-item-action px-2"
                    disabled="@(group.NumCopies <= 0)"
                    @onclick="() => RemoveCardFromDeck(card)">

                    <div class="row">
                        <div class="col-5">
                            <HoverCard Target="card"> 
                                <span class="btn-link">@card.Name</span>
                            </HoverCard>
                        </div>

                        <div class="col-4"> @MtgSymbols.Format(card.ManaCost).ToMarkupString() </div>

                        <div class="col-3">
                            <span title="@card.Name Held" class="badge badge-pill badge-primary"> 
                                @(group.Amount?.NumCopies ?? 0) </span>

                            <span title="@card.Name Returning" class="badge badge-pill badge-danger"> 
                                @(group.GiveBack?.NumCopies ?? 0) </span>

                            <span title="@card.Name Wanted" class="badge badge-pill badge-secondary">
                                @(group.Want?.NumCopies ?? 0) </span>
                        </div>
                    </div>
                </button>
            }
            <div class="list-group-item disabled px-2" aria-disabled="true">
                <div class="row">
                    <div class="col-5"> <b> Total </b> </div>
                    <div class="col-4"> --- </div>
                    <div class="col-3">

                        @{ var allDeckCards = AllDeckCards(); }

                        <span title="Total Held" class="badge badge-pill badge-primary"> 
                            @allDeckCards.Sum(qg => qg.Amount?.NumCopies ?? 0) </span>

                        <span title="Total Returning" class="badge badge-pill badge-danger"> 
                            @allDeckCards.Sum(qg => qg.GiveBack?.NumCopies ?? 0) </span>

                        <span title="Total Wanted" class="badge badge-pill badge-secondary">
                            @allDeckCards.Sum(qg => qg.Want?.NumCopies ?? 0) </span>
                    </div>
                </div>
            </div>
        </div>

        <OffsetPaging Offset="deckCards.Offset" PageSelected="ChangeDeckPage" />
    </section>
</div>
