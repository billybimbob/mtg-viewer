@inject NavigationManager Nav
@using Microsoft.AspNetCore.Http.Extensions

<div class="preview">
    <div class="preview-watch">
        @if (ChildContent != null)
        {
            @ChildContent
        }
        else
        {
            <a href="@TargetRoute"> @Target.Name </a>
        }
    </div>

    <aside class="preview-item">
        <img alt="@Target.Name image" src="@Target.ImageUrl.WithHttps()" class="img-fluid rounded" />
    </aside>
</div>


@code
{
    public readonly QueryBuilder _query = new();

    public string TargetRoute => $"/Cards/Details/{Target.Id}{_query}";

    [Parameter]
    public Card Target { get; set; } = default!;

    [Parameter]
    public string? ReturnUrl { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    protected override void OnParametersSet()
    {
        if (ChildContent is not null)
        {
            return;
        }

        if (ReturnUrl is not null)
        {
            _query.Add("returnUrl", ReturnUrl);
        }
    }
}