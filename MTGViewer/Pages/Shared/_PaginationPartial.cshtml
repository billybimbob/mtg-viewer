@model Data.Pages
@inject PageSizes PageSizes

@if (Model.HasMultiple)
{
    int start = Model.Current / PageSizes.Default * PageSizes.Default;
    int end = Math.Min(Model.Total, start + PageSizes.Default + 1);

    if (start > 0)
    {
        start -= 1;
    }

    <nav>
        <ul class="pagination justify-content-center">
            @if (start > 0)
            {
                <li class="page-item">
                    <a asp-route-pageIndex="0" class="page-link"> 1 </a>
                </li>
                <li class="page-item disabled">
                    <span class="page-link"> ... </span>
                </li>
            }

            @for (int i = start; i < end; ++i)
            {
                var pageIndex = i;
                var activePage = pageIndex == Model.Current ? "active" : "";

                <li class="page-item @activePage">
                    @if (pageIndex != Model.Current)
                    {
                        <a asp-route-pageIndex="@pageIndex"
                            class="page-link">
                            @(pageIndex + 1) </a>
                    }
                    else
                    {
                        <span class="page-link">
                            @(pageIndex + 1)
                            <span class="sr-only">(current)</span>
                        </span>
                    }
                </li>
            }

            @if (end < Model.Total - 1)
            {
                <li class="page-item disabled">
                    <span class="page-link"> ... </span>
                </li>
            }

            @if (end < Model.Total)
            {
                <li class="page-item">
                    <a asp-route-pageIndex="@(Model.Total - 1)" class="page-link"> @Model.Total </a>
                </li>
            }
        </ul>
    </nav>
}